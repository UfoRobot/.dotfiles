# General helper functions
#-------------------------------------------------------------------------------
md () {
    mkdir -p "$@" && cd "$@";
}

ex () {
    if [ -f $1 ] ; then
        case $1 in
            *.tar.bz2)   tar xjf $1     ;;
            *.tar.gz)    tar xzf $1     ;;
            *.bz2)       bunzip2 $1     ;;
            *.rar)       rar x $1       ;;
            *.gz)        gunzip $1      ;;
            *.tar)       tar xf $1      ;;
            *.tbz)       tar xjf $1     ;;
            *.tbz2)      tar xjf $1     ;;
            *.tgz)       tar xzf $1     ;;
            *.zip)       unzip $1       ;;
            *.Z)         uncompress $1  ;;
            *.7z)        7z x $1        ;;
            *)           echo "'$1' cannot be extracted via extract()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}

prompt () {
    if [ -n "$1" ]; then
        read -sp "$1: " my_pass
    else
        read -sp "Prompt (unspecified): " my_pass
    fi
    echo $my_pass
}

function grmla() {
    find . -regex .*\\.mli? | xargs grep -Hn --color=auto "$@"
}
function grml() {
    find . -regex .*\\.mli? | grep -v autogen/ | grep -v _build/ | xargs grep -Hn --color=auto "$@"
}


# Tmux helper functions
#------------------------------------------------------------------------------
tmup() {
    echo -n "Updating to latest tmux environment..."
    IFS=","
    for line in $(tmux showenv -t $(tmux display -p "#S") | tr "\n" ","); do
        if [[ $line == -* ]]; then
            unset $(echo $line | cut -c2-)
        else
            export $line
        fi
    done
    unset line
    unset IFS
    echo "Done"
}

function irssi_nickpane() {
    [[ -z $TMUX ]] && return 0
    tmux selectw -t irc
    tmux -q setw main-pane-width $(( $(tput cols) - 31)) # make room for nicks
    tmux splitw -v "cat ~/.irssi/nicklistfifo"           # spawn nicklist pane
    tmux -q selectl main-vertical                        # assign the layout
    tmux selectw -t irc                                  # select window 'irc'
    tmux selectp -t 0                                    # select pane 0
    tmux send-keys -t irc '/nicklist fifo' C-m
}

function irssi() {
    irssi_nickpane
    $(which irssi)
}

function irssi_repair() {
    [[ -z $TMUX ]] && return 0
    tmux selectw -t irc
    tmux selectp -t 0
    tmux killp -a
    irssi_nickpane
}

function ssh() {
    if [[ "${TERM}" = screen* ]]; then
        env TERM=screen ssh "$@"
    else
        /usr/bin/ssh "$@"
    fi
}


# Work utility functions
#------------------------------------------------------------------------------
function cifs_mount() {
    if [ $# != 2 ]; then
        echo "Usage: cifs_mount <citix-share> <mount-point>"
    else
        SHARE=$(echo ${1} | tr '\' '/')
        MOUNTPOINT=$2
        sudo umount $MOUNTPOINT 2> /dev/null
        sudo mount.cifs ${SHARE} ${MOUNTPOINT} -o user=citrite\\simonbe,password=$(prompt "Citrite password"),uid=2279,gid=10020,rw,noserverino
    fi
}

function my_cifs_mount() {
    if [ $# != 1 ]; then
        echo "Usage: my_cifs_mount <mount-point>"
    else
        MOUNTPOINT=$1
        cifs_mount //lonpfs01/simonbe$ $MOUNTPOINT
    fi
}

bugger() {
    for i in $(find . -maxdepth 2 -type d -regex '.*bug-report-[0-9]*'); do
        if [ $(dirname $i) != '.' ]; then
            mv $i .
            rm -ri $(dirname $i)
            i=$(basename $i)
        fi
        host=$(head -n 3 $i/inventory.xml | grep system-summary | cut -d\" -f4);
        mv $i bug-report-$host
    done
}
